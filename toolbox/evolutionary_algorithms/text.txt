Findings:
My experiment was changing around the population size, and messing around with the probability of mutation and probability of mating numbers. What I found is that having an excessively large population (3000) slows down my computer a lot, and does not make the evolving process go any faster. However, an excessively low population (30) was not able to ever get the right answer after 5000 generations. What this shows is that the starting population needs to be large enough to have enough variance, but not too large to be overwhelmed by variance.

Having the mutation variable set really high (1.0) sped up the evolutionary process a lot, as in it was done in very few generations (around 300, vs the usual 1k). This makes a bit of sense, because the more mutations the more likely it is to get it right at some point. However, setting the mating probability really high (1.0) the string never evolved correctly, probably because all of the strings in the population became the same. 
